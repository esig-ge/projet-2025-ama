-- =====================================================
-- Création / Réinitialisation de la base DK_Bloom
-- =====================================================

DROP DATABASE IF EXISTS DK_BLOOM;

CREATE DATABASE DK_BLOOM CHARACTER SET UTF8MB4 COLLATE UTF8MB4_UNICODE_CI;

USE DK_BLOOM;

SET NAMES UTF8MB4;

SET FOREIGN_KEY_CHECKS = 0;

-- ---------- DROPS (enfants -> parents)
DROP TABLE IF EXISTS CLIENT_RABAIS;

DROP TABLE IF EXISTS AVIS;

DROP TABLE IF EXISTS COMMANDE_PAIEMENT;

DROP TABLE IF EXISTS PAIEMENT;

DROP TABLE IF EXISTS COMMANDE_SUPP;

DROP TABLE IF EXISTS COMMANDE_PRODUIT;

DROP TABLE IF EXISTS COMMANDE;

DROP TABLE IF EXISTS LIVRAISON;

DROP TABLE IF EXISTS RABAIS;

DROP TABLE IF EXISTS COFFRET_BOUQUET;

DROP TABLE IF EXISTS COFFRET;

DROP TABLE IF EXISTS BOUQUET_FLEUR;

DROP TABLE IF EXISTS BOUQUET;

DROP TABLE IF EXISTS FLEUR;

DROP TABLE IF EXISTS SUPP_PRODUIT;

DROP TABLE IF EXISTS SUPPLEMENT;

DROP TABLE IF EXISTS PRODUIT;

DROP TABLE IF EXISTS CLIENT_ADRESSE;

DROP TABLE IF EXISTS ADRESSE;

DROP TABLE IF EXISTS CLIENT;

DROP TABLE IF EXISTS ADMINISTRATEUR;

DROP TABLE IF EXISTS PERSONNE;

SET FOREIGN_KEY_CHECKS = 1;

-- =====================================================
-- CREATES (parents -> enfants)
-- =====================================================

-- PERSONNES & ROLES -----------------------------------
CREATE TABLE PERSONNE (
  PER_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  PER_NOM VARCHAR(50) NOT NULL,
  PER_PRENOM VARCHAR(30) NOT NULL,
  PER_EMAIL VARCHAR(50) NOT NULL,
  PER_MDP VARCHAR(100) NOT NULL,
  PER_NUM_TEL CHAR(10) NOT NULL, -- 0 + 9 chiffres
  CONSTRAINT UK_PERSONNE_EMAIL UNIQUE (PER_EMAIL),
  CONSTRAINT UK_PERSONNE_TEL UNIQUE (PER_NUM_TEL),
  CONSTRAINT CK_PERSONNE_TEL CHECK (REGEXP_LIKE(PER_NUM_TEL, '^0[0-9]{9}$')),
  CONSTRAINT CK_PERSONNE_EMAIL CHECK (REGEXP_LIKE(PER_EMAIL, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$')),
  CONSTRAINT CK_PERSONNE_MDP CHECK (REGEXP_LIKE(PER_MDP, '^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[^A-Za-z0-9]).{8,}$'))
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE ADMINISTRATEUR (
  PER_ID BIGINT PRIMARY KEY,
  CONSTRAINT FK_ADMIN_PERSONNE FOREIGN KEY (PER_ID) REFERENCES PERSONNE(PER_ID) ON UPDATE RESTRICT ON DELETE RESTRICT
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE CLIENT (
  PER_ID BIGINT PRIMARY KEY,
  CLI_DATENAISSANCE DATE NULL,
  CLI_NB_POINTS_FIDELITE INT NOT NULL DEFAULT 0,
  CONSTRAINT FK_CLIENT_PERSONNE FOREIGN KEY (PER_ID) REFERENCES PERSONNE(PER_ID) ON UPDATE RESTRICT ON DELETE RESTRICT,
  CONSTRAINT CK_CLIENT_DNA CHECK (CLI_DATENAISSANCE IS NULL OR CLI_DATENAISSANCE <= (CURRENT_DATE - INTERVAL 16 YEAR)),
  CONSTRAINT CK_CLIENT_POINTS_NON_NEGATIFS CHECK (CLI_NB_POINTS_FIDELITE >= 0)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

-- ADRESSES --------------------------------------------
CREATE TABLE ADRESSE (
  ADR_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  ADR_RUE VARCHAR(150) NOT NULL,
  ADR_NUMERO VARCHAR(10) NOT NULL, -- ex: 12, 12A, 27-29
  ADR_NPA VARCHAR(6) NOT NULL, -- 3–6 chiffres
  ADR_VILLE VARCHAR(120) NOT NULL,
  ADR_PAYS VARCHAR(120) NOT NULL,
  ADR_TYPE ENUM('LIVRAISON', 'FACTURATION') NOT NULL,
  CONSTRAINT CK_ADRESSE_NPA CHECK (REGEXP_LIKE(ADR_NPA, '^[0-9]{3,6}$'))
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE CLIENT_ADRESSE (
  PER_ID BIGINT NOT NULL,
  ADR_ID BIGINT NOT NULL,
  PRIMARY KEY (PER_ID, ADR_ID),
  CONSTRAINT FK_CA_CLIENT FOREIGN KEY (PER_ID) REFERENCES CLIENT(PER_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_CA_ADRESSE FOREIGN KEY (ADR_ID) REFERENCES ADRESSE(ADR_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

-- PRODUITS & SUPPLÉMENTS ------------------------------
CREATE TABLE PRODUIT (
  PRO_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  PRO_NOM VARCHAR(190) NOT NULL,
  PRO_PRIX DECIMAL(12, 2) NOT NULL,
  CONSTRAINT UK_PRODUIT_NOM UNIQUE (PRO_NOM),
  CONSTRAINT CK_PRODUIT_PRIX_POSITIF CHECK (PRO_PRIX > 0)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE SUPPLEMENT (
  SUP_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  SUP_NOM VARCHAR(190) NOT NULL,
  SUP_DESCRIPTION TEXT NULL,
  SUP_PRIX_UNITAIRE DECIMAL(12, 2) NOT NULL,
  SUP_QTE_STOCK INT NOT NULL DEFAULT 0,
  CONSTRAINT CK_SUP_PRIX_NON_NEGATIFS CHECK (SUP_PRIX_UNITAIRE >= 0),
  CONSTRAINT CK_SUP_STOCK_NON_NEGATIFS CHECK (SUP_QTE_STOCK >= 0)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE SUPP_PRODUIT (
  SUP_ID BIGINT NOT NULL,
  PRO_ID BIGINT NOT NULL,
  PRIMARY KEY (SUP_ID, PRO_ID),
  CONSTRAINT FK_SP_SUP FOREIGN KEY (SUP_ID) REFERENCES SUPPLEMENT(SUP_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_SP_PRO FOREIGN KEY (PRO_ID) REFERENCES PRODUIT(PRO_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

-- SOUS-TYPES DE PRODUIT -------------------------------
CREATE TABLE FLEUR (
  PRO_ID BIGINT PRIMARY KEY,
  FLE_TYPE VARCHAR(50) NOT NULL,
  FLE_COULEUR ENUM('rouge', 'rose', 'rose clair', 'bleu', 'blanc', 'noir', 'violet') NOT NULL,
  CONSTRAINT FK_FLEUR_PRODUIT FOREIGN KEY (PRO_ID) REFERENCES PRODUIT(PRO_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE BOUQUET (
  PRO_ID BIGINT PRIMARY KEY,
  BOU_DESCRIPTION VARCHAR(600) NOT NULL,
  BOU_TYPE ENUM('standard', 'personnalise', 'mariage', 'anniversaire', 'naissance', 'deuil', 'romantique', 'saisonnier', 'luxe') NOT NULL,
  CONSTRAINT CK_BOUQUET_DESC_MIN10 CHECK (CHAR_LENGTH(BOU_DESCRIPTION) >= 10),
  CONSTRAINT FK_BOUQUET_PRODUIT FOREIGN KEY (PRO_ID) REFERENCES PRODUIT(PRO_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE BOUQUET_FLEUR (
  BOUQUET_ID BIGINT NOT NULL, -- = PRO_ID du bouquet
  FLEUR_ID BIGINT NOT NULL, -- = PRO_ID de la fleur
  BF_QTE INT NOT NULL,
  CONSTRAINT CK_BF_QTE_POS CHECK (BF_QTE >= 1),
  PRIMARY KEY (BOUQUET_ID, FLEUR_ID),
  CONSTRAINT FK_BF_BOUQUET FOREIGN KEY (BOUQUET_ID) REFERENCES BOUQUET(PRO_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_BF_FLEUR FOREIGN KEY (FLEUR_ID) REFERENCES FLEUR(PRO_ID) ON UPDATE CASCADE ON DELETE RESTRICT
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE COFFRET (
  PRO_ID BIGINT PRIMARY KEY,
  CO_EVENEMENT ENUM('saint-valentin', 'fetes des meres', 'happy birthday', 'paques', 'noel', 'nouvel an') NOT NULL,
  CONSTRAINT FK_COFFRET_PRODUIT FOREIGN KEY (PRO_ID) REFERENCES PRODUIT(PRO_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE COFFRET_BOUQUET (
  COFFRET_ID BIGINT NOT NULL, -- = PRO_ID du coffret
  BOUQUET_ID BIGINT NOT NULL, -- = PRO_ID du bouquet
  PRIMARY KEY (COFFRET_ID, BOUQUET_ID),
  CONSTRAINT FK_CB_COFFRET FOREIGN KEY (COFFRET_ID) REFERENCES COFFRET(PRO_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_CB_BOUQUET FOREIGN KEY (BOUQUET_ID) REFERENCES BOUQUET(PRO_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

-- RABAIS & LIVRAISON -------------------------------
CREATE TABLE RABAIS (
  RAB_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  RAB_POURCENTAGE DECIMAL(5, 2) NOT NULL,
  RAB_ACTIF TINYINT(1) NOT NULL DEFAULT 1,
  CONSTRAINT CK_RABAIS_0_100 CHECK (RAB_POURCENTAGE >= 0 AND RAB_POURCENTAGE <= 100)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE LIVRAISON (
  LIV_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  LIV_STATUT ENUM('prévue', 'en cours', 'livrée', 'annulée') NOT NULL DEFAULT 'prévue',
  LIV_MODE ENUM('retrait', 'courrier', 'coursier') NOT NULL,
  LIV_MONTANT_FRAIS DECIMAL(12, 2) NOT NULL DEFAULT 0,
  LIV_NOM_TRANSPORTEUR VARCHAR(120) NULL,
  LIV_NUM_SUIVI_COMMANDE VARCHAR(120) NULL,
  LIV_DATE DATE NOT NULL,
  CONSTRAINT CK_LIV_FRAIS_NON_NEG CHECK (LIV_MONTANT_FRAIS >= 0)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

-- COMMANDE & LIGNES --------------------------------
CREATE TABLE COMMANDE (
  COM_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  PER_ID BIGINT NOT NULL,
  LIV_ID BIGINT NULL,
  RAB_ID BIGINT NULL,
  COM_STATUT ENUM('en préparation', 'expédiée', 'livrée', 'en attente d''expédition', 'annulée') NOT NULL DEFAULT 'en préparation',
  COM_DATE DATE NOT NULL,
  COM_DESCRIPTION TEXT NULL,
  COM_PTS_CUMULE INT NOT NULL DEFAULT 0,
  CONSTRAINT CK_COM_PTS_NON_NEG CHECK (COM_PTS_CUMULE >= 0),
  CONSTRAINT FK_COM_CLIENT FOREIGN KEY (PER_ID) REFERENCES CLIENT(PER_ID) ON UPDATE RESTRICT ON DELETE RESTRICT,
  CONSTRAINT FK_COM_LIVRAISON FOREIGN KEY (LIV_ID) REFERENCES LIVRAISON(LIV_ID) ON UPDATE CASCADE ON DELETE SET NULL,
  CONSTRAINT FK_COM_RABAIS FOREIGN KEY (RAB_ID) REFERENCES RABAIS(RAB_ID) ON UPDATE CASCADE ON DELETE SET NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE COMMANDE_PRODUIT (
  COM_ID BIGINT NOT NULL,
  PRO_ID BIGINT NOT NULL,
  CP_QTE_COMMANDEE INT NOT NULL,
  CP_TYPE_PRODUIT ENUM('bouquet', 'fleur', 'coffret') NOT NULL,
  CONSTRAINT CK_CP_QTE_POS CHECK (CP_QTE_COMMANDEE >= 1),
  PRIMARY KEY (COM_ID, PRO_ID),
  CONSTRAINT FK_CP_COMMANDE FOREIGN KEY (COM_ID) REFERENCES COMMANDE(COM_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_CP_PRODUIT FOREIGN KEY (PRO_ID) REFERENCES PRODUIT(PRO_ID) ON UPDATE RESTRICT ON DELETE RESTRICT
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

-- SUPPLÉMENTS PAR COMMANDE -------------------------
CREATE TABLE COMMANDE_SUPP (
  SUP_ID BIGINT NOT NULL,
  COM_ID BIGINT NOT NULL,
  CS_QTE_COMMANDEE INT NOT NULL,
  PRIMARY KEY (SUP_ID, COM_ID),
  CONSTRAINT CK_CS_QTE_POS CHECK (CS_QTE_COMMANDEE > 0),
  CONSTRAINT FK_CS_SUP FOREIGN KEY (SUP_ID) REFERENCES SUPPLEMENT(SUP_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_CS_COM FOREIGN KEY (COM_ID) REFERENCES COMMANDE(COM_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

-- PAIEMENT & LIAISON -------------------------------
CREATE TABLE PAIEMENT (
  PAI_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  PAI_MODE ENUM('Twint', 'Carte', 'Revolut') NOT NULL,
  PAI_MONTANT DECIMAL(12, 2) NOT NULL,
  PAI_DATE DATE NOT NULL,
  CONSTRAINT CK_PAI_MONTANT_POS CHECK (PAI_MONTANT > 0)
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE COMMANDE_PAIEMENT (
  COM_ID BIGINT NOT NULL,
  PAI_ID BIGINT NOT NULL,
  PRIMARY KEY (COM_ID, PAI_ID),
  CONSTRAINT FK_CPAI_COM FOREIGN KEY (COM_ID) REFERENCES COMMANDE(COM_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_CPAI_PAI FOREIGN KEY (PAI_ID) REFERENCES PAIEMENT(PAI_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

-- AVIS PRODUITS -----------------------------------
CREATE TABLE AVIS (
  AVI_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
  PRO_ID BIGINT NOT NULL,
  PER_ID BIGINT NOT NULL,
  AVI_NOTE TINYINT NOT NULL, -- 0-9 (ou ajuste 1-5 si besoin)
  AVI_DESCRIPTION VARCHAR(500) NULL,
  AVI_DATE DATE NOT NULL,
  CONSTRAINT CK_AVI_NOTE_RANGE CHECK (AVI_NOTE BETWEEN 0 AND 9),
  CONSTRAINT FK_AVIS_PRO FOREIGN KEY (PRO_ID) REFERENCES PRODUIT(PRO_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_AVIS_PER FOREIGN KEY (PER_ID) REFERENCES PERSONNE(PER_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

-- RABAIS <-> CLIENT -------------------------------
CREATE TABLE CLIENT_RABAIS (
  RAB_ID BIGINT NOT NULL,
  PER_ID BIGINT NOT NULL,
  PRIMARY KEY (RAB_ID, PER_ID),
  CONSTRAINT FK_CR_RAB FOREIGN KEY (RAB_ID) REFERENCES RABAIS(RAB_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_CR_PER FOREIGN KEY (PER_ID) REFERENCES PERSONNE(PER_ID) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;

--DONNEES DE TEST DANS LA TABLE SI ON VEUT EFFECTUER DES INSERTIONS

-- =========================
-- PERSONNE
-- =========================
INSERT INTO PERSONNE (
  PER_NOM,
  PER_PRENOM,
  PER_EMAIL,
  PER_MDP,
  PER_NUM_TEL
) VALUES (
  'Dupont',
  'Alice',
  'alice.dupont@example.com',
  'Test@1234!',
  '0791234567'
),
(
  'Martin',
  'Jean',
  'jean.martin@example.com',
  'Secure#2024',
  '0789876543'
),
(
  'Durand',
  'Sophie',
  'sophie.durand@example.com',
  'Azerty@9',
  '0774567890'
);

-- =========================
-- CLIENT
-- =========================
INSERT INTO CLIENT (
  PER_ID,
  CLI_DATENAISSANCE,
  CLI_NB_POINTS_FIDELITE
) VALUES (
  1,
  '1990-05-12',
  100
),
(
  2,
  '1985-09-23',
  250
),
(
  3,
  '2000-01-10',
  50
);

-- =========================
-- ADRESSE
-- =========================
INSERT INTO ADRESSE (
  ADR_RUE,
  ADR_NUMERO,
  ADR_NPA,
  ADR_VILLE,
  ADR_PAYS,
  ADR_TYPE
) VALUES (
  'Rue de Lausanne',
  '12A',
  '1202',
  'Genève',
  'Suisse',
  'LIVRAISON'
),
(
  'Avenue du Rhône',
  '27',
  '1205',
  'Genève',
  'Suisse',
  'FACTURATION'
),
(
  'Chemin des Fleurs',
  '45',
  '1010',
  'Lausanne',
  'Suisse',
  'LIVRAISON'
);

-- =========================
-- CLIENT_ADRESSE
-- =========================
INSERT INTO CLIENT_ADRESSE (
  PER_ID,
  ADR_ID
) VALUES (
  1,
  1
),
(
  2,
  2
),
(
  3,
  3
);

-- =========================
-- PRODUIT
-- =========================
INSERT INTO PRODUIT (
  PRO_NOM,
  PRO_PRIX
) VALUES (
  'Rose rouge classique',
  10.50
),
(
  'Bouquet printemps',
  45.00
),
(
  'Coffret Saint-Valentin',
  89.90
);

-- =========================
-- SUPPLEMENT
-- =========================
INSERT INTO SUPPLEMENT (
  SUP_NOM,
  SUP_DESCRIPTION,
  SUP_PRIX_UNITAIRE,
  SUP_QTE_STOCK
) VALUES (
  'Ruban satin',
  'Ruban décoratif rouge',
  2.50,
  100
),
(
  'Carte personnalisée',
  'Petit mot personnalisé',
  3.00,
  50
),
(
  'Vase en verre',
  'Vase cylindrique transparent',
  15.00,
  20
);

-- =========================
-- SUPP_PRODUIT
-- =========================
INSERT INTO SUPP_PRODUIT (
  SUP_ID,
  PRO_ID
) VALUES (
  1,
  1
),
(
  2,
  2
),
(
  3,
  3
);

-- =========================
-- FLEUR
-- =========================
INSERT INTO FLEUR (
  PRO_ID,
  FLE_TYPE,
  FLE_COULEUR
) VALUES (
  1,
  'Rose',
  'rouge'
),
(
  1,
  'Rose',
  'rose'
),
(
  1,
  'Rose',
  'blanc'
);

-- =========================
-- BOUQUET
-- =========================
INSERT INTO BOUQUET (
  PRO_ID,
  BOU_DESCRIPTION,
  BOU_TYPE
) VALUES (
  2,
  'Bouquet de printemps avec fleurs variées',
  'saisonnier'
),
(
  2,
  'Bouquet mariage élégant avec roses blanches',
  'mariage'
),
(
  2,
  'Bouquet romantique avec 12 roses rouges',
  'romantique'
);

-- =========================
-- BOUQUET_FLEUR
-- =========================
INSERT INTO BOUQUET_FLEUR (
  BOUQUET_ID,
  FLEUR_ID,
  BF_QTE
) VALUES (
  2,
  1,
  12
),
(
  2,
  2,
  8
),
(
  2,
  3,
  6
);

-- =========================
-- COFFRET
-- =========================
INSERT INTO COFFRET (
  PRO_ID,
  CO_EVENEMENT
) VALUES (
  3,
  'saint-valentin'
),
(
  3,
  'noel'
),
(
  3,
  'fetes des meres'
);

-- =========================
-- COFFRET_BOUQUET
-- =========================
INSERT INTO COFFRET_BOUQUET (
  COFFRET_ID,
  BOUQUET_ID
) VALUES (
  3,
  2
),
(
  3,
  2
),
(
  3,
  2
);

-- =========================
-- RABAIS
-- =========================
INSERT INTO RABAIS (
  RAB_POURCENTAGE,
  RAB_ACTIF
) VALUES (
  10.00,
  1
),
(
  20.00,
  1
),
(
  15.00,
  0
);

-- =========================
-- LIVRAISON
-- =========================
INSERT INTO LIVRAISON (
  LIV_STATUT,
  LIV_MODE,
  LIV_MONTANT_FRAIS,
  LIV_NOM_TRANSPORTEUR,
  LIV_NUM_SUIVI_COMMANDE,
  LIV_DATE
) VALUES (
  'prévue',
  'courrier',
  5.00,
  'Poste Suisse',
  'CH12345',
  '2025-09-10'
),
(
  'en cours',
  'coursier',
  10.00,
  'DHL',
  'CH54321',
  '2025-09-12'
),
(
  'livrée',
  'retrait',
  0.00,
  NULL,
  NULL,
  '2025-08-30'
);

-- =========================
-- COMMANDE
-- =========================
INSERT INTO COMMANDE (
  PER_ID,
  LIV_ID,
  RAB_ID,
  COM_STATUT,
  COM_DATE,
  COM_DESCRIPTION,
  COM_PTS_CUMULE
) VALUES (
  1,
  1,
  1,
  'en préparation',
  '2025-09-01',
  'Commande bouquet printemps',
  45
),
(
  2,
  2,
  2,
  'expédiée',
  '2025-08-28',
  'Commande coffret Saint-Valentin',
  90
),
(
  3,
  3,
  NULL,
  'livrée',
  '2025-08-20',
  'Commande roses rouges',
  30
);

-- =========================
-- COMMANDE_PRODUIT
-- =========================
INSERT INTO COMMANDE_PRODUIT (
  COM_ID,
  PRO_ID,
  CP_QTE_COMMANDEE,
  CP_TYPE_PRODUIT
) VALUES (
  1,
  2,
  1,
  'bouquet'
),
(
  2,
  3,
  1,
  'coffret'
),
(
  3,
  1,
  12,
  'fleur'
);

-- =========================
-- COMMANDE_SUPP
-- =========================
INSERT INTO COMMANDE_SUPP (
  SUP_ID,
  COM_ID,
  CS_QTE_COMMANDEE
) VALUES (
  1,
  1,
  1
),
(
  2,
  2,
  2
),
(
  3,
  3,
  1
);

-- =========================
-- PAIEMENT
-- =========================
INSERT INTO PAIEMENT (
  PAI_MODE,
  PAI_MONTANT,
  PAI_DATE
) VALUES (
  'Twint',
  45.00,
  '2025-09-01'
),
(
  'Carte',
  89.90,
  '2025-08-28'
),
(
  'Revolut',
  120.00,
  '2025-08-20'
);

-- =========================
-- COMMANDE_PAIEMENT
-- =========================
INSERT INTO COMMANDE_PAIEMENT (
  COM_ID,
  PAI_ID
) VALUES (
  1,
  1
),
(
  2,
  2
),
(
  3,
  3
);

-- =========================
-- AVIS
-- =========================
INSERT INTO AVIS (
  PRO_ID,
  PER_ID,
  AVI_NOTE,
  AVI_DESCRIPTION,
  AVI_DATE
) VALUES (
  1,
  1,
  9,
  'Très belles roses, fraîcheur impeccable.',
  '2025-09-01'
),
(
  2,
  2,
  8,
  'Bouquet bien arrangé, livraison rapide.',
  '2025-08-29'
),
(
  3,
  3,
  7,
  'Coffret sympa mais un peu cher.',
  '2025-08-21'
);

-- =========================
-- CLIENT_RABAIS
-- =========================
INSERT INTO CLIENT_RABAIS (
  RAB_ID,
  PER_ID
) VALUES (
  1,
  1
),
(
  2,
  2
),
(
  3,
  3
);